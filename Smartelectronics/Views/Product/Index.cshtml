@model ProductVM
@{
    ViewData["Title"] = "Index";
}

<section class="breadcrumb-section">
    <h2 class="sr-only">Site Breadcrumb</h2>
    <div class="container">
        <div class="breadcrumb-contents">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="index.html">Smart Electronics</a>
                    </li>
                    <li class="breadcrumb-item active">
                        <a href="index.html">
                            Məhsullar
                        </a>
                    </li>
                </ol>
            </nav>
        </div>
    </div>
</section>

<main class="main-shop">
    <div class="container">
        <div class="product-filters">
            <button class="product-filter-btn active data-0">Yeni məhsullar</button>
            <button class="product-filter-btn data-1">Endirimli məhsullar</button>
            <button class="product-filter-btn data-2">Əvvəlcə Ucuz</button>
            <button class="product-filter-btn data-3">Əvvəlcə Bahalı</button>
        </div>
        <div class="content">
            <button class="filter-btn-mobile"><i class="fa-solid fa-filter"></i></button>
            <div class="left">
                <div class="filter-list">
                    <div class="filter-item category">
                        <button class="filter-button">Kateqoriya<i class="fa-solid fa-angles-down"></i></button>
                        <div class="drop-content">
                            <div class="content-box">
                                @if (Model.Categories != null && Model.Categories.Count() > 0)
                                {
                                    @foreach (Category category in Model?.Categories)
                                    {
                                        <a asp-controller="product" asp-action="filter" asp-route-id="@category.Id" class="link categorybtn">
                                            <span>@category.Name</span>
                                            <span>@category?.Products?.Count()</span>
                                        </a>
                                    }
                                }
                            </div>

                        </div>
                    </div>

                    <div class="filter-item suggestions">
                        <button class="filter-button">Təklif edilən<i class="fa-solid fa-angles-down"></i></button>
                        <div class="drop-content">
                            <div class="content-box">
                                <div class="radio-box">
                                    <input type="radio" name="sortoffer" data-id="0" id="sortFromNew-0" class="nice-select">
                                    <label for="sortFromNew-0">Ən yenilər</label>
                                </div>
                                <div class="radio-box">
                                    <input type="radio" name="sortoffer" data-id="1" id="isDiscounted-1" class="nice-select">
                                    <label for="isDiscounted-1">Endirimli Məhsullar</label>
                                </div>
                                <div class="radio-box">
                                    <input type="radio" name="sortoffer" data-id="2" id="sortFromPrice-2" class="nice-select">
                                    <label for="sortFromPrice-2">Ən aşağı qiymət</label>
                                </div>
                                <div class="radio-box">
                                    <input type="radio" name="sortoffer" data-id="3" id="sortFromPrice-3" class="nice-select">
                                    <label for="sortFromPrice-3">Ən yuxarı qiymət</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="filter-item pricefilter">
                        <button class="filter-button">Qiymət<i class="fa-solid fa-angles-down"></i></button>
                        <div class="drop-content">
                            <div class="content-box">
                                <div class="price-input">
                                    <div class="field">
                                        <span>Min</span>
                                        <input type="number" class="input-min" value="0">
                                    </div>
                                    <div class="separator"></div>
                                    <div class="field">
                                        <span>Maks</span>
                                        <input type="number" class="input-max" value="7000">
                                    </div>
                                </div>
                                <div class="slider">
                                    <div class="progress"></div>
                                </div>
                                <div class="range-input">
                                    <input type="range" class="range-min" min="0" max="7000" value="0" step="10">
                                    <input type="range" class="range-max" min="0" max="7000" value="7000" step="10">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="filter-item brands">
                        <button class="filter-button">Brend<i class="fa-solid fa-angles-down"></i></button>
                        <div class="drop-content">
                            <div class="content-box">
                                @if (Model.Brands != null && Model.Brands.Count() > 0)
                                {
                                    int count = 0;
                                    @foreach (Brand brand in Model?.Brands)
                                    {
                                        count++;
                                        <div class="radio-box">
                                            <a class="brandbtn" asp-controller="product" asp-action="filter" asp-route-id="@brand.Id">
                                                <input type="radio" name="offer" id="isDiscounted-@count">
                                                <label for="isDiscounted-@count"><span>@brand.Name</span><span>@brand?.Products?.Count()</span></label>
                                            </a>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="filter-item colorfilter">
                        <button class="filter-button">Rəng<i class="fa-solid fa-angles-down"></i></button>
                        <div class="drop-content">
                            <div class="content-box">
                                @if (Model.Colors != null &&
                                Model?.Colors.Count() > 0)
                                {
                                    @foreach (Color color in Model?.Colors)
                                    {
                                        <a asp-action="filter" asp-route-id="@color.Id" class="color colorbtn" style="background: @color.Code;"></a>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="right shop-pagination-partial">
                @await Html.PartialAsync("_ShopPaginationPartial", Model)
            </div>
        </div>
    </div>
</main>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/base/jquery-ui.css" />
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="text/javascript">

    $(document).ready(function (e) {

        let categoryId = -1;
        let brandId = -1;
        let colorId = -1;
        let min = -1;
        let max = -1;
        let sortby = -1;


        const rangeInput = document.querySelectorAll(".range-input input");
        const priceInput = document.querySelectorAll(".price-input input");
        const range = document.querySelector(".slider .progress");
        let priceGap = 100;

        priceInput.forEach(input => {
            input.addEventListener("input", e => {
                let minPrice = parseInt(priceInput[0].value);
                let maxPrice = parseInt(priceInput[1].value);

                if ((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max) {
                    if (e.target.className === "input-min") {
                        rangeInput[0].value = minPrice;
                        range.style.left = ((minPrice / rangeInput[0].max) * 100) + "%";
                    } else {
                        rangeInput[1].value = maxPrice;
                        range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
                    }
                }
                min = minPrice;
                max = maxPrice;
            });

            input.addEventListener('change', function () {
                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }


                var radios = document.querySelectorAll('input[name="sortoffer"]');
                for (var i = 0; i < radios.length; i++) {
                    if (radios[i].checked) {
                        sortby = radios[i].getAttribute('data-id');
                        break;
                    }
                }
                console.log('sortoffer - ' + sortby)

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`product/filter?${path.join('&')}`)
                    .then(res => {
                        
                        return res.text()
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                        console.log('data geldi')
                    })
            
                })
            })

        rangeInput.forEach(input => {
            input.addEventListener("input", e => {
                let minVal = parseInt(rangeInput[0].value);
                let maxVal = parseInt(rangeInput[1].value);
                console.log(minVal + '---' + maxVal)
                if ((maxVal - minVal) < priceGap) {
                    if (e.target.className === "range-min") {
                        rangeInput[0].value = maxVal - priceGap;
                        priceInput[0].value = maxVal - priceGap;
                        range.style.left = (((maxVal - priceGap) / rangeInput[0].max) * 100) + "%";
                    } else {
                        rangeInput[1].value = minVal + priceGap;
                        priceInput[1].value = minVal + priceGap;
                        range.style.right = 100 - ((minVal + priceGap) / rangeInput[1].max) * 100 + "%";
                    }
                } else {
                    priceInput[0].value = minVal;
                    priceInput[1].value = maxVal;
                    range.style.left = ((minVal / rangeInput[0].max) * 100) + "%";
                    range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
                }

                min = minVal;
                max = maxVal;
            });

            input.addEventListener("change", e => {
                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }


                var radios = document.querySelectorAll('input[name="sortoffer"]');
                for (var i = 0; i < radios.length; i++) {
                    if (radios[i].checked) {
                        sortby = radios[i].getAttribute('data-id');
                        break;
                    }
                }
                console.log('offer - ' + sortby)

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`product/filter?${path.join('&')}`)
                    .then(res => {
                        console.log(`product/filter?${path.join('&')}`)
                        return res.text()
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                    })
            })
        });
            

        $(document).on('click', '.paginated-btn, .categorybtn, .brandbtn, .colorbtn, .product-filter-btn', function (e) {
            if ($(this).hasClass('paginated-btn')) {
                e.stopPropagation();
                e.stopImmediatePropagation();
                e.preventDefault();

                let url = $(this).attr('href');


                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                    var radios = document.querySelectorAll('input[name="sortoffer"]');
                for (var i = 0; i < radios.length; i++) {
                    if (radios[i].checked) {
                        sortby = radios[i].getAttribute('data-id');
                        break;
                    }
                }

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}&${path.join('&')}`)
                    .then(res => {
                        return res.text();
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                    })

            }
            else if ($(this).hasClass('categorybtn')) {
                e.stopPropagation();
                e.stopImmediatePropagation();
                e.preventDefault();

                let url = $(this).attr('href');
                let ctId = url.split('/')[url.split('/').length - 1];

                url = url.replace("/" + ctId, "");

                let path = [];

                $('.categorybtn').css('font-weight', '400');
                

                if (categoryId == ctId) {
                    $(this).css('font-weight', '400');
                    categoryId = 0;
                } else {
                    categoryId = ctId;
                    $(this).css('font-weight', 'bold');
                }

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                    var radios = document.querySelectorAll('input[name="sortoffer"]');
                    for (var i = 0; i < radios.length; i++) {
                        if (radios[i].checked) {
                            sortby = radios[i].getAttribute('data-id');
                            break;
                        }
                    }

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}?${path.join('&')}`)
                    .then(res => {
                        return res.text()
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                    })
            }
            else if ($(this).hasClass('brandbtn')) {
                e.stopPropagation();
                e.stopImmediatePropagation();
                e.preventDefault();

                let url = $(this).attr('href');
                let brnd = url.split('/')[url.split('/').length - 1];

                url = url.replace("/" + brnd, "");

                if (brandId == brnd) {
                    $(this).css('font-weight', '400');
                    brandId = 0;
                } else {
                    brandId = brnd;
                    $(this).css('font-weight', 'bold');
                }


                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                    var radios = document.querySelectorAll('input[name="sortoffer"]');
                for (var i = 0; i < radios.length; i++) {
                    if (radios[i].checked) {
                        sortby = radios[i].getAttribute('data-id');
                        break;
                    }
                }

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}?${path.join('&')}`)
                    .then(res => {
                        return res.text()
                    })
                    .then(data => {
                            $('.shop-pagination-partial').html(data)
                            console.log('test')
                    })
            }
            else if ($(this).hasClass('colorbtn')) {
                e.preventDefault();

                let url = $(this).attr('href');
                let clr = url.split('/')[url.split('/').length - 1];

                url = url.replace("/"+clr, "");

                if (colorId == clr) {
                    colorId = 0;
                } else {
                    colorId = clr;
                }

                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                var radios = document.querySelectorAll('input[name="sortoffer"]');
                for (var i = 0; i < radios.length; i++) {
                    if (radios[i].checked) {
                        sortby = radios[i].getAttribute('data-id');
                        break;
                    }
                }

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}?${path.join('&')}`)
                    .then(res => {
                        return res.text()
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                        console.log('test')
                    })
            }
            else if ($(this).hasClass('product-filter-btn')) {
                if($(this).hasClass('data-0')){
                    var dataId = 0;
                    var radioElement = document.querySelector('input[type="radio"][data-id="' + dataId + '"]');
                } else if ($(this).hasClass('data-1')) {
                    var dataId = 1;
                    var radioElement = document.querySelector('input[type="radio"][data-id="' + dataId + '"]');
                } else if ($(this).hasClass('data-2')) {
                    var dataId = 2;
                    var radioElement = document.querySelector('input[type="radio"][data-id="' + dataId + '"]');
                } else if ($(this).hasClass('data-3')) {
                    var dataId = 3;
                    var radioElement = document.querySelector('input[type="radio"][data-id="' + dataId + '"]');
                }
                
                radioElement.click();
            }
        })
            .on('change', '.nice-select', function (e) {
                e.stopPropagation();
                e.stopImmediatePropagation();
                e.preventDefault();

                let path = [];

                if (categoryId > 0) {
                    path.push(`categoryId=${categoryId}`);
                }

                if (brandId > 0) {
                    path.push(`brandId=${brandId}`);
                }

                if (colorId > 0) {
                    path.push(`colorId=${colorId}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                    var radios = document.querySelectorAll('input[name="sortoffer"]');
                    for (var i = 0; i < radios.length; i++) {
                        if (radios[i].checked) {
                            sortby = radios[i].getAttribute('data-id');
                            break;
                        }
                    }

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`product/filter?${path.join('&')}`)
                    .then(res => {
                        return res.text();
                    })
                    .then(data => {
                        $('.shop-pagination-partial').html(data)
                    })


            })

    })

        

</script>

