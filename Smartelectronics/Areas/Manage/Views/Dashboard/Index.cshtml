
@{
    ViewData["Title"] = "Index";
    IEnumerable<Order> orders = ViewBag.Orders;
    IEnumerable<Message> messages = ViewBag.Messages;
}

@*<div class="col-md-12">
    <div class="card">
        <div class="card-body">
            <div class="d-md-flex align-items-center">
                <div>
                    <h4 class="card-title">Satış Qrafikası</h4>
                    <h5 class="card-subtitle">Son 30 gündə olan satışlar</h5>
                </div>
                <div class="ms-auto d-flex no-block align-items-center">
                </div>
            </div>
            <div class="row">
                <!-- column -->
                <div class="col-lg-12">
                    <div class="campaign ct-charts"></div>
                </div>
                <!-- column -->
            </div>
        </div>
    </div>
</div>*@

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
    $(function () {
        "use strict";
        // ==============================================================
        // Newsletter
        // ==============================================================

        
        //var orders = @Html.Raw(ViewBag.OrdersForJs);
        //console.log(orders)
        //console.log(orders[0])
        //console.log(orders[1])
        //console.log(orders[2])
        //console.log(orders[3])

        //// Son 30 günün tarihini içeren orderların count'unu hesapla
        //var currentDate = new Date();
        //var thirtyDaysAgo = new Date();
        //thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

        //var result = [];
        //for (var i = 0; i < orders.length; i++) {
        //    var orderDate = new Date(orders[i].CreatedAt);
        //    if (orderDate >= thirtyDaysAgo && orderDate <= currentDate) {
        //        result.push(orders[i].count);
        //    }
        //}

        //console.log(result)
        //// Sonuçları bir JavaScript dizisine atayarak kullanabilirsin
        //var javascriptArray = JSON.parse(JSON.stringify(result));

        var chart = new Chartist.Line('.campaign', {
            labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
            series: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        }, {
            low: 0,
            high: 50,

            showArea: true,
            fullWidth: true,
            plugins: [
                Chartist.plugins.tooltip()
            ],
            axisY: {
                onlyInteger: true,
                scaleMinSpace: 40,
                offset: 20,
                labelInterpolationFnc: function (value) {
                    return (value / 1) + 'k';
                }
            },

        });

        // Offset x1 a tiny amount so that the straight stroke gets a bounding box
        // Straight lines don't get a bounding box
        // Last remark on -> http://www.w3.org/TR/SVG11/coords.html#ObjectBoundingBox
        chart.on('draw', function (ctx) {
            if (ctx.type === 'area') {
                ctx.element.attr({
                    x1: ctx.x1 + 0.001
                });
            }
        });

        // Create the gradient definition on created event (always after chart re-render)
        chart.on('created', function (ctx) {
            var defs = ctx.svg.elem('defs');
            defs.elem('linearGradient', {
                id: 'gradient',
                x1: 0,
                y1: 1,
                x2: 0,
                y2: 0
            }).elem('stop', {
                offset: 0,
                'stop-color': 'rgba(255, 255, 255, 1)'
            }).parent().elem('stop', {
                offset: 1,
                'stop-color': 'rgba(64, 196, 255, 1)'
            });
        });


        var chart = [chart];
    });
</script>

<div class="row">
    <!-- column -->
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <!-- title -->
                <div class="d-md-flex">
                    <div>
                        <h4 class="card-title">Son Sifarişlər</h4>
                    </div>
                    <div class="ms-auto">
                        
                    </div>
                </div>
                <!-- title -->
            </div>
            <div class="table-responsive">
                <table class="table v-middle">
                    <thead>
                        <tr class="bg-light">
                            <th class="border-top-0">Müştəri adı</th>
                            <th class="border-top-0">Məhsul sayı</th>
                            <th class="border-top-0">Ödəniş metodu</th>
                            <th class="border-top-0">Tarix</th>
                            <th class="border-top-0">Qiymət</th>
                            <th class="border-top-0">Yönləndirmə</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if(orders != null && orders.Count() > 0){
                            @foreach(Order order in orders)
                            {
                                <tr>
                                    <td>
                                        @(order.Name + " " + order.SurName)
                                    </td>
                                    <td>@order.OrderItems.Count()</td>
                                    <td>@order.OrderMethod</td>
                                    <td>@order.CreatedAt</td>
                                    <td>@order.OrderItems.Sum(a => a.Price * a.Count) AZN</td>
                                    <td><a asp-area="manage" asp-controller="order" asp-action="Detail" asp-route-id="@order.Id" class="btn btn-primary">Detail</a></td>
                                </tr>
                            }
                        }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- Table -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Recent comment and chats -->
<!-- ============================================================== -->
<div class="row">
    <!-- column -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Son Müraciətlər</h4>
            </div>
            @if(messages != null && messages.Count() > 0)
            {
                @foreach(Message message in messages)
                {
                    <div class="comment-widgets scrollable">
                        <!-- Comment Row -->
                        <div class="d-flex flex-row comment-row">
                            <div class="comment-text w-100">
                                <h6 class="font-medium">@(message.Name + " " + message.Surname)</h6>
                                <span class="m-b-15 d-block">
                                    @if(message?.YourMessage?.Length > 50)
                                    {
                                        string.Concat(@message?.YourMessage.Substring(0, 50), "...");
                                    }
                                    else
                                    {
                                        @message?.YourMessage
                                    }
                                </span>
                                <div class="comment-footer">
                                    <span class="text-muted float-end">@message.CreatedAt</span>  <span class="action-icons">
                                        <a asp-area="manage" asp-controller="Message" asp-action="Detail" asp-route-id="@message.Id"><i class="ti-pencil-alt"></i></a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

