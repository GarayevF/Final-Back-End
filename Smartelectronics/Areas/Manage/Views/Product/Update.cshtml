@model ProductVM
@{
    ViewData["Title"] = "Update";
    IEnumerable<Category> categories = ViewBag.MainCategories;
    IEnumerable<Brand> brands = ViewBag.Brands;
    IEnumerable<Color> colors = ViewBag.Colors;
    IEnumerable<LoanRange> loanRanges = ViewBag.LaonRanges;
    IEnumerable<LoanCompany> loanCompanies = ViewBag.LoanCompanies;
    List<ProductColor> productColors = ViewBag.ProductColors;

    SelectList categorySelectList = new SelectList(categories, nameof(Category.Id), nameof(Category.Name));
    SelectList brandSelectList = new SelectList(brands, nameof(Brand.Id), nameof(Brand.Name));
    SelectList colorSelectList = new SelectList(colors, nameof(Color.Id), nameof(Color.Code));
    SelectList loanRangeSelectList = new SelectList(loanRanges, nameof(LoanRange.Id), nameof(LoanRange.Range));
    SelectList loanCompanySelectList = new SelectList(loanCompanies, nameof(LoanCompany.Id), nameof(LoanCompany.Name));
}

<div class="row">
    <div class="col-lg-12">
        <div class="row justify-content-lg-between">
            <div class="col-lg-12">
                <h1 class="h3 mb-4 text-gray-800">Məhsul Məlumatlarının Yenilənməsi</h1>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <form method="post" enctype="multipart/form-data" id="product-form">
            <div class="form-check">
                <input class="form-check-input" asp-for="Product.IsMostViewed" />
                <label class="form-check-label" asp-for="Product.IsMostViewed">Çox baxılan</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" asp-for="Product.IsNewArrival" />
                <label class="form-check-label" asp-for="Product.IsNewArrival">Yeni məhsul</label>
            </div>
            <div class="form-group">
                <label asp-for="Product.Title">Məhsul adı</label>
                <input asp-for="Product.Title" class="form-control title-input" />
            </div>
            <input type="hidden" asp-for="Product.Id" class="form-control title-input" />
            <div class="form-group">
                <label asp-for="Product.Count">Say</label>
                <input asp-for="Product.Count" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Product.Price">Qiymət</label>
                <input asp-for="Product.Price" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Product.DiscountedPrice">Endirimli qiymət</label>
                <input asp-for="Product.DiscountedPrice" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Product.BrandId">Brend</label>
                <select asp-for="Product.BrandId" class="form-control" id="brand" asp-items="@brandSelectList">
                    <option value="">--Brend Seçin--</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Product.CategoryId">Kateqoriya</label>
                <select asp-for="Product.CategoryId" class="form-control" id="category" asp-items="@categorySelectList">
                    <option value="">--Kateqoriya Seçin--</option>
                </select>
            </div>

            <div id="specification-inputs">
                @if (Model?.SpecificationVMs != null && Model?.SpecificationVMs.Count() > 0)
                {
                    int count = 0;
                    foreach (SpecificationVM specificationVM in Model.SpecificationVMs)
                    {
                        <div class="form-group">
                            <label for="spec-@specificationVM.SpecificationId">@specificationVM.Name</label>
                            <input type="hidden" id="specName-@specificationVM.SpecificationId" name="SpecificationVMs[@count].Name" value="@specificationVM.Name" />
                            <input type="hidden" id="specId-@specificationVM.SpecificationId" name="SpecificationVMs[@count].SpecificationId" value="@specificationVM.SpecificationId" />
                            <input type="text" class="form-control spec-input" id="specValue-@specificationVM.SpecificationId" name="SpecificationVMs[@count].Value" value="@specificationVM.Value">
                        </div>
                        count++;
                    }
                }
            </div>

            <div class="form-group">
                <label asp-for="ColorIds">Rəng seçin</label>
                <select asp-for="ColorIds" class="form-control" id="color" asp-items="@colorSelectList">
                </select>
                <span asp-validation-for="ColorIds" class="text text-danger"></span>
            </div>
            <div id="color-inputs">
                @if (Model?.ColorImageVMs != null && Model?.ColorImageVMs.Count() > 0)
                {
                    int count = 0;
                    foreach (ColorImageVM colorImageVM in Model.ColorImageVMs.DistinctBy(a => a.ColorId))
                    {
                        <div class="form-group">
                            <label for="colorImage-@colorImageVM.ColorId"><span style="color: @colorImageVM.Name">@colorImageVM.Name</span> rəngi üçün şəkil(lər) seçin</label>
                            <input type="hidden" id="colorImageName-@colorImageVM.ColorId" name="ColorImageVMs[@count].Name" value="@colorImageVM.Name" />
                            <input type="hidden" id="colorImageId-@colorImageVM.ColorId" name="ColorImageVMs[@count].ColorId" value="@colorImageVM.ColorId" />
                            <input type="file" accept="image/jpeg" multiple class="form-control color-input" id="colorImageValue-@colorImageVM.ColorId" name="ColorImageVMs[@count].Files" value="@colorImageVM.Files">
                            <span class="text text-danger">@ViewData.ModelState[$"ColorImageVMs[${@count}].Files"]?.Errors.First().ErrorMessage</span>
                        </div>
                        <div class="imageContainer d-flex" style="margin-bottom: 20px">
                            @if (productColors.Select(p => p.ProductId == Model.Product.Id && p.ColorId == colorImageVM.ColorId) != null && productColors.Select(p => p.ProductId == Model.Product.Id && p.ColorId == colorImageVM.ColorId).Count() > 0)
                            {
                                @await Html.PartialAsync("_ProductImagePartial", productColors.Where(p => p.ProductId == Model.Product.Id && p.ColorId == colorImageVM.ColorId).ToList())
                            }
                        </div>
                        count++;
                    }
                }
            </div>

            <div class="form-group">
                <label asp-for="LoanCompanyIds">Məhsul üçün faizsiz kredit kampanyası seçin</label>
                <select asp-for="LoanCompanyIds" class="form-control" id="loanCompany" asp-items="@loanCompanySelectList">
                </select>
                <span asp-validation-for="LoanCompanyIds" class="text text-danger"></span>
            </div>
            <div id="loanCompany-inputs">
                @if (Model?.LoanTermVMs != null && Model?.LoanTermVMs.Count() > 0)
                {
                    int count = 0;
                    foreach (LoanTermVM loanTermVM in Model.LoanTermVMs)
                    {
                        <div class="outer-form-group d-flex gap-2">
                            <div class="form-group">
                                <label asp-for="LoanTermVMs[@count].LoanRangeIds">@loanTermVM.Title üçün mövcud ayları seçin</label>
                                <select name="LoanTermVMs[@count].LoanRangeIds" class="form-control" id="LoanTermVMs[@count].loanCompany" multiple>
                                    @if (loanRanges != null && loanRanges.Count() > 0)
                                    {
                                        @foreach (LoanRange loanRange in loanRanges)
                                        {
                                            if (loanTermVM.LoanRangeIds != null && loanTermVM.LoanRangeIds.Count() > 0 && loanTermVM.LoanRangeIds.Contains(loanRange.Id))
                                            {
                                                <option selected="selected" value="@loanRange.Id">@loanRange.Range</option>
                                            }
                                            else
                                            {
                                                <option value="@loanRange.Id">@loanRange.Range</option>
                                            }

                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="loanTerm-@loanTermVM.LoanCompanyId" value="LoanTermVMs[@count].LoanRangeIds">Başlıq</label>
                                <input type="hidden" id="loanCompanyId-@loanTermVM.LoanCompanyId" name="LoanTermVMs[@count].LoanCompanyId" value="@loanTermVM.LoanCompanyId" />
                                <input type="text" class="form-control loanTerm-input" id="loanTermValue-@loanTermVM.LoanCompanyId" name="LoanTermVMs[@count].Title" value="@loanTermVM.Title">
                            </div>
                        </div>
                        count++;
                    }
                }
            </div>



            <div class="form-group">
                <label asp-for="IFLoanRangeIds">Faizsiz kredit şərtlərinin mövcud olduğu ayları seçin</label>
                <select asp-for="IFLoanRangeIds" class="form-control" id="IFLoan" asp-items="@loanRangeSelectList">
                </select>
                <span asp-validation-for="IFLoanRangeIds" class="text text-danger"></span>
            </div>
            <div id="IFLoan-inputs">
                @if (Model?.IFLoanVMs != null && Model?.IFLoanVMs.Count() > 0)
                {
                    int count = 0;
                    foreach (IFLoanVM ifLoanVM in Model.IFLoanVMs)
                    {
                        <div class="outer-form-group d-flex gap-2">
                            <div class="form-group">
                                <label for="IFLoanVMs[@count].InitialPayment" value="IFLoanVMs[@count].InitialPayment">@loanRanges.FirstOrDefault(a => a.Id == ifLoanVM.LoanRangeId)?.Range aylıq faizsiz kredit şərti üçün ilkin ödəniş</label>
                                <input type="hidden" id="IFLoanId-@ifLoanVM.LoanRangeId" name="IFLoanVMs[@count].LoanRangeId" value="@ifLoanVM.LoanRangeId" />
                                <input type="number" class="form-control IFLoan-input" id="IFLoanVMs[@count].InitialPayment" name="IFLoanVMs[@count].InitialPayment" value="@ifLoanVM.InitialPayment">
                            </div>
                            <div class="form-group">
                                <label for="IFLoanVMs[@count].MonthlyPayment" value="IFLoanVMs[@count].MonthlyPayment">@loanRanges.FirstOrDefault(a => a.Id == ifLoanVM.LoanRangeId)?.Range aylıq faizsiz kredit şərti üçün aylıq ödəniş</label>
                                <input type="number" class="form-control IFLoan-input" id="IFLoanVMs[@count].MonthlyPayment" name="IFLoanVMs[@count].MonthlyPayment" value="@ifLoanVM.MonthlyPayment">
                            </div>
                        </div>
                        count++;
                    }
                }
            </div>

            <div class="form-group">
                <label asp-for="LoanRangeIds">Kredit şərtlərinin mövcud olduğu ayları seçin</label>
                <select asp-for="LoanRangeIds" class="form-control" id="Loan" asp-items="@loanRangeSelectList">
                </select>
            </div>
            <div id="Loan-inputs">
                @if (Model?.LoanVMs != null && Model?.LoanVMs.Count() > 0)
                {
                    int count = 0;
                    foreach (LoanVM loanVM in Model.LoanVMs)
                    {
                        <div class="outer-form-group d-flex gap-2">
                            <div class="form-group">
                                <label for="LoanVMs[@count].InterestForVipUsers" value="LoanVMs[@count].InterestForVipUsers">Vip istifadəçilər üçün @loanRanges.FirstOrDefault(a => a.Id == loanVM.LoanRangeId)?.Range ay üzrə kredit faizi</label>
                                <input type="hidden" id="LoanId-@loanVM.LoanRangeId" name="LoanVMs[@count].LoanRangeId" value="@loanVM.LoanRangeId" />
                                <input type="number" class="form-control Loan-input" id="LoanVMs[@count].InterestForVipUsers" name="LoanVMs[@count].InterestForVipUsers" value="@loanVM.InterestForVipUsers">
                            </div>
                            <div class="form-group">
                                <label for="LoanVMs[@count].InterestForStandartUsers" value="LoanVMs[@count].InterestForStandartUsers">Standart istifadəçilər üçün @loanRanges.FirstOrDefault(a => a.Id == loanVM.LoanRangeId)?.Range ay üzrə kredit faizi</label>
                                <input type="number" class="form-control Loan-input" id="LoanVMs[@count].InterestForStandartUsers" name="LoanVMs[@count].InterestForStandartUsers" value="@loanVM.InterestForVipUsers">
                            </div>
                        </div>
                        count++;
                    }
                }
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>

        @if (ViewBag.ModelErrors != null)
        {
            foreach (var modelError in ViewBag.ModelErrors)
            {

                <script>
                    var inputName = '@modelError.InputId';
                    var errorMessage = '@modelError.ErrorMessage';
                    var inputElement = document.getElementsByName(inputName)[0];
                    if (inputElement) {
                        var spanElement = document.createElement("span");
                        spanElement.classList.add("text")
                        spanElement.classList.add("text-danger")
                        spanElement.innerHTML = errorMessage;
                        inputElement.parentNode.appendChild(spanElement);
                    }
                </script>
            }
        }
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script type="text/javascript">

    let colorSelectOptions = document.querySelectorAll('#color option');

    colorSelectOptions.forEach(option => {
        option.style.color = `${option.innerHTML}`;
    })

    let specificationInputsDiv = document.querySelector('#specification-inputs');
    let categorySelect = document.querySelector('#category');
    categorySelect.addEventListener('change', function () {
        let categoryId = categorySelect.value;
        if (categoryId) {
            fetch(`/manage/product/GetSpecifications/${categoryId}`)
                .then(response => response.json())
                .then(specifications => {
                    let html = "";
                    let count = 0;
                    specifications.forEach(spec => {
                        html += `
                                                    <div class="form-group">
                                                        <label for="spec-${spec.id}" value="SpecificationVMs[${count}].Name">${spec.name}</label>
                                                    <input type="hidden" id="specName-${spec.id}" name="SpecificationVMs[${count}].Name" value="${spec.name}"/>
                                                    <input type="hidden" id="specId-${spec.id}" name="SpecificationVMs[${count}].SpecificationId" value="${spec.id}"/>
                                                    <input type="text" class="form-control spec-input" id="specValue-${spec.id}" name="SpecificationVMs[${count}].Value">
                                                    </div>`;
                        count++;
                    });
                    specificationInputsDiv.innerHTML = html;
                    let form = document.querySelector('#product-form');
                    
                });

        } else {
            specificationInputsDiv.innerHTML = "";
        }
    })

    ////////////////////////////////////

    let colorInputsDiv = document.querySelector('#color-inputs');
    let colorSelect = document.querySelector('#color');
    colorSelect.addEventListener('change', function () {
        var options = colorSelect.options;
        var selectedValues = [];
        for (var i = 0; i < options.length; i++) {
            if (options[i].selected) {
                selectedValues.push({ id: options[i].value, code: options[i].innerHTML });
            }
        }
        if (selectedValues.length > 0) {
            console.log(selectedValues)
            let html = "";
            let count = 0;
            selectedValues.forEach(color => {
                html += `
                                        <div class="form-group">
                                                            <label for="color-${color.id}" value="ColorImageVMs[${count}].Name"><span style="color: ${color.code}">${color.code}</span> rəngi üçün şəkil(lər) seçin</label>
                                                        <input type="hidden" id="colorName-${color.id}" name="ColorImageVMs[${count}].Name" value="${color.code}"/>
                                                            <input type="hidden" id="colorId-${color.id}" name="ColorImageVMs[${count}].ColorId" value="${color.id}"/>
                                                        <input type="file" accept="image/jpeg" multiple class="form-control color-input" id="colorValue-${color.id}" name="ColorImageVMs[${count}].Files">
                                        </div>`;
                count++;
            });
            colorInputsDiv.innerHTML = html;
        } else {
            colorInputsDiv.innerHTML = "";
        }
    })

    ////////////////////////////////

    let LoanRanges = []
    fetch(`/manage/product/GetLoanRanges`)
        .then(response => response.json())
        .then(loanRange => {

            loanRange.forEach(lr => {
                LoanRanges.push({ id: lr.id, value: lr.range });
            })
        });

    let loanCompanyInputsDiv = document.querySelector('#loanCompany-inputs');
    let loanCompanySelect = document.querySelector('#loanCompany');
    loanCompanySelect.addEventListener('change', function () {
        var options = loanCompanySelect.options;
        var selectedValues = [];
        for (var i = 0; i < options.length; i++) {
            if (options[i].selected) {
                selectedValues.push({ id: options[i].value, name: options[i].innerHTML });
            }
        }
        if (selectedValues.length > 0) {
            console.log(selectedValues)
            let html = "";
            let count = 0;
            selectedValues.forEach(loan => {
                html += `
                                        <div class="outer-form-group d-flex gap-2">
                                            <div class="form-group">
                                                <label asp-for="LoanTermVMs[${count}].LoanRangeIds">${loan.name} üçün mövcud ayları seçin</label>
                                                    <select name="LoanTermVMs[${count}].LoanRangeIds" class="form-control" id="LoanTermVMs[${count}].loanCompany" multiple>
                                                    `;
                LoanRanges.forEach(lr => {
                    html += `<option value="${lr.id}">${lr.value}</option>`
                })
                html += `
                                            </select>
                                                <span asp-validation-for="LoanTermVMs[${count}].LoanRangeIds" class="text text-danger"></span>
                                                                    </div>
                                                                        <div class="form-group">
                                                                <label for="loanTerm-${loan.id}" value="LoanTermVMs[${count}].LoanRangeIds">Başlıq</label>
                                                                <input type="hidden" id="loanCompanyId-${loan.id}" name="LoanTermVMs[${count}].LoanCompanyId" value="${loan.id}"/>
                                                            <input type="text" class="form-control loanTerm-input" id="loanTermValue-${loan.id}" name="LoanTermVMs[${count}].Title">
                                                        </div>
                                                                    </div>`;
                count++;
            });
            loanCompanyInputsDiv.innerHTML = html;
        } else {
            loanCompanyInputsDiv.innerHTML = "";
        }
    })

    //////////////////////////////////////////////////////

    let IFLoanInputsDiv = document.querySelector('#IFLoan-inputs');
    let IFLoanSelect = document.querySelector('#IFLoan');
    IFLoanSelect.addEventListener('change', function () {
        var options = IFLoanSelect.options;
        var selectedValues = [];
        for (var i = 0; i < options.length; i++) {
            if (options[i].selected) {
                selectedValues.push({ id: options[i].value, value: options[i].innerHTML });
            }
        }
        if (selectedValues.length > 0) {
            console.log(selectedValues)
            let html = "";
            let count = 0;
            selectedValues.forEach(ifloan => {
                html += `
                                <div class="outer-form-group d-flex gap-2">
                                <div class="form-group">
                                        <label for="IFLoanVMs[${count}].InitialPayment" value="IFLoanVMs[${count}].InitialPayment">${ifloan.value} aylıq faizsiz kredit şərti üçün ilkin ödəniş</label>
                                    <input type="hidden" id="IFLoanId-${ifloan.id}" name="IFLoanVMs[${count}].LoanRangeId" value="${ifloan.id}"/>
                                    <input type="number" class="form-control IFLoan-input" id="IFLoanVMs[${count}].InitialPayment" name="IFLoanVMs[${count}].InitialPayment">
                                </div>
                                <div class="form-group">
                                            <label for="IFLoanVMs[${count}].MonthlyPayment" value="IFLoanVMs[${count}].MonthlyPayment">${ifloan.value} aylıq faizsiz kredit şərti üçün aylıq ödəniş</label>
                                    <input type="number" class="form-control IFLoan-input" id="IFLoanVMs[${count}].MonthlyPayment" name="IFLoanVMs[${count}].MonthlyPayment">
                                </div>
                            </div>`;
                count++;
            });
            IFLoanInputsDiv.innerHTML = html;
        } else {
            IFLoanInputsDiv.innerHTML = "";
        }
    })

    //////////////////////////////////////////////////////


    let LoanInputsDiv = document.querySelector('#Loan-inputs');
    let LoanSelect = document.querySelector('#Loan');
    LoanSelect.addEventListener('change', function () {
        var options = LoanSelect.options;
        var selectedValues = [];
        for (var i = 0; i < options.length; i++) {
            if (options[i].selected) {
                selectedValues.push({ id: options[i].value, value: options[i].innerHTML });
            }
        }
        if (selectedValues.length > 0) {
            console.log(selectedValues)
            let html = "";
            let count = 0;
            selectedValues.forEach(loan => {
                html += `
                                <div class="outer-form-group d-flex gap-2">
                                    <div class="form-group">
                                                    <label for="LoanVMs[${count}].InterestForVipUsers" value="LoanVMs[${count}].InterestForVipUsers">Vip istifadəçilər üçün ${loan.value} ay üzrə kredit faizi</label>
                                        <input type="hidden" id="LoanId-${loan.id}" name="LoanVMs[${count}].LoanRangeId" value="${loan.id}"/>
                                        <input type="number" class="form-control Loan-input" id="LoanVMs[${count}].InterestForVipUsers" name="LoanVMs[${count}].InterestForVipUsers">
                                    </div>
                                    <div class="form-group">
                                                    <label for="LoanVMs[${count}].InterestForStandartUsers" value="LoanVMs[${count}].InterestForStandartUsers">Standart istifadəçilər üçün ${loan.value} ay üzrə kredit faizi</label>
                                        <input type="number" class="form-control Loan-input" id="LoanVMs[${count}].InterestForStandartUsers" name="LoanVMs[${count}].InterestForStandartUsers">
                                    </div>
                                </div>`;
                count++;
            });
            LoanInputsDiv.innerHTML = html;
        } else {
            LoanInputsDiv.innerHTML = "";
        }
    })

</script>